NAME
    Class::Accessor::TrackDirty - Define simple entities stored in some places.

SYNOPSIS
        package UserInfo;
        use Class::Accessor::TrackDirty;
        fields "name", "password";
        volatile_fields "modified";

        package main;
        my $user = UserInfo->new({name => 'honma', password => 'F!aS3l'});
        store_into_someplace($user->to_hash) if $user->is_modified;
        ...
        $user = UserInfo->from_hash(restore_from_someplace());
        $user->name('hiratara');
        $user->revert; # but decided not to
        $user->name('honma');
        $user->name('hiratara');
        $user->name('honma'); # I can't make up my mind...
        ... blabla ...

        # Store it only if $user was really modified.
        store_into_someplace($user->to_hash) if $user->is_modified;

DESCRIPTION
    Class::Accessor::TrackDirty defines simple entities stored in files, RDBMS, KVS, and
    so on.

INTERFACE
  Functions
   "fields("name1", "name2", ...);"
   "volatile_fields("name1", "name2", ...);"
   "my $object = YourClass->new({name1 => "value1", ...});"
   "my $object = YourClass->from_hash({name1 => "value1", ...});"
   "my $hash_ref = $your_object->to_hash;"
   "my $hash_ref = $your_object->revert;"
SEE ALSO
    perl

AUTHOR
    Masahiro Honma <hiratara@cpan.org>

LICENSE AND COPYRIGHT
    Copyright (c) 2013, Masahiro Honma. All rights reserved.

    This library is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

